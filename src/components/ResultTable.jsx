import React, { useState } from 'react';

const ResultTable = ({ result }) => {
  const [showEnglishCode, setShowEnglishCode] = useState(false);
  const [showDigitalCode, setShowDigitalCode] = useState(false);

  if (!result) return null;

  

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
  const getStatusText = (status) => {
    switch (status) {
      case 'approved':
      case '‡∏ú‡πà‡∏≤‡∏ô':
        return '‡∏ú‡πà‡∏≤‡∏ô';
      case 'rejected':
      case '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô':
        return '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô';
      case 'pending':
      case '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤':
        return '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤';
      default:
        return status || '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤';
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Link component
  const LinkButton = ({ href, children }) => (
    <a
      href={href}
      target="_blank"
      rel="noopener noreferrer"
      className="text-blue-600 hover:text-blue-800 underline text-sm"
    >
      {children}
    </a>
  );

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ
  const getFieldValue = (obj, ...fieldNames) => {
    for (const fieldName of fieldNames) {
      if (obj[fieldName] !== undefined && obj[fieldName] !== null && obj[fieldName] !== '') {
        return obj[fieldName];
      }
    }
    return '';
  };

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ï‡πà‡∏≤‡∏á ‡πÜ
  const applicantId = getFieldValue(result, 'Application_id', 'ApplicantId', 'id', 'searchId');
  const firstName = getFieldValue(result, '‡∏ä‡∏∑‡πà‡∏≠ (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)', 'FirstName', 'firstName', 'name');
  const lastName = getFieldValue(result, '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)', 'LastName', 'lastName', 'surname');
  const firstNameEn = getFieldValue(result, '‡∏ä‡∏∑‡πà‡∏≠ (‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)', 'FirstNameEn', 'firstNameEn');
  const lastNameEn = getFieldValue(result, '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)', 'LastNameEn', 'lastNameEn');
  const status = getFieldValue(result, 'Status', 'status');
  const vdoLink = getFieldValue(result, '‡πÅ‡∏ô‡∏ö Link Youtube (‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ö‡∏ö unlisted)', 'VDOLink', 'vdoLink');
  const docLink = getFieldValue(result, '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç Google Drive Link (shared)', 'DocLink', 'docLink');
  const email = getFieldValue(result, '‡∏≠‡∏µ‡πÄ‡∏°‡∏•', '‡∏≠‡∏µ‡πÄ‡∏°‡∏•1', 'email');
  const phone = getFieldValue(result, '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', 'phone');

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡∏ú‡πà‡∏≤‡∏ô" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  const isApproved = getStatusText(status) === '‡∏ú‡πà‡∏≤‡∏ô';

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≠‡∏ö
  const toggleEnglishCode = () => {
    setShowEnglishCode(!showEnglishCode);
  };

  const toggleDigitalCode = () => {
    setShowDigitalCode(!showDigitalCode);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î
  const maskCode = (code) => {
    return code ? '‚Ä¢'.repeat(code.length) : '‚Ä¢‚Ä¢‚Ä¢‚Ä¢';
  };

  return (
    <div className="mt-8 space-y-8">
      {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏ô‡∏ö‡∏±‡∏ï‡∏£ */}
      <div>
        <h3 className="text-xl font-semibold text-[#003366] mb-4 font-sukhumvit">
          ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏ô‡∏ö‡∏±‡∏ï‡∏£ (24 ‡∏°‡∏¥.‡∏¢. - 16 ‡∏°‡∏¥.‡∏¢. 68)
        </h3>
        <div className="overflow-x-auto shadow-lg rounded-lg">
          <table className="w-full bg-white border border-gray-200">
            <thead className="bg-[#1a365d] text-white">
              <tr>
                <th className="px-4 py-3 text-left text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£</th>
                <th className="px-4 py-3 text-left text-sm font-medium">‡∏ä‡∏∑‡πà‡∏≠</th>
                <th className="px-4 py-3 text-left text-sm font-medium">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                <th className="px-4 py-3 text-left text-sm font-medium">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                <th className="px-4 py-3 text-left text-sm font-medium">‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠</th>
                <th className="px-4 py-3 text-left text-sm font-medium">‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-200">
              <tr className="hover:bg-gray-50">
                <td className="px-4 py-3 text-sm text-gray-900 font-medium">
                  {applicantId}
                </td>
                <td className="px-4 py-3 text-sm text-gray-900">
                  {firstName}
                </td>
                <td className="px-4 py-3 text-sm text-gray-900">
                  {lastName}
                </td>
                <td className="px-4 py-3 text-sm">
                  <span className={`font-medium px-2 py-1 rounded-full text-xs ${
                    getStatusText(status) === '‡∏ú‡πà‡∏≤‡∏ô' ? 'bg-green-100 text-green-800' : 
                    getStatusText(status) === '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'
                  }`}>
                    {getStatusText(status)}
                  </span>
                </td>
                <td className="px-4 py-3 text-sm">
                  {vdoLink && vdoLink !== '#' ? (
                    <LinkButton href={vdoLink}>‡∏î‡∏π‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠</LinkButton>
                  ) : (
                    <span className="text-gray-400 text-xs">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå</span>
                  )}
                </td>
                <td className="px-4 py-3 text-sm">
                  {docLink && docLink !== '#' ? (
                    <LinkButton href={docLink}>‡∏î‡∏π‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</LinkButton>
                  ) : (
                    <span className="text-gray-400 text-xs">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå</span>
                  )}
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÅ‡∏•‡∏∞‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡∏ú‡πà‡∏≤‡∏ô" */}
      {isApproved && (
        <div>
          <h3 className="text-xl font-semibold text-[#003366] mb-4 font-sukhumvit">
            ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÅ‡∏•‡∏∞‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (28 ‡∏°‡∏¥.‡∏¢. - 6 ‡∏Å.‡∏Ñ. 68)
          </h3>
          
          {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© */}
          <div className="mb-6">
            <div className="overflow-x-auto shadow-lg rounded-lg">
              <table className="w-full bg-white border border-gray-200">
                <thead className="bg-[#1a365d] text-white">
                  <tr>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£</th>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≠‡∏ö</th>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡∏ä‡∏∑‡πà‡∏≠</th>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</th>
                  </tr>
                </thead>
                <tbody className="divide-y divide-gray-200">
                  <tr className="hover:bg-gray-50">
                    <td className="px-4 py-3 text-sm text-gray-900 font-medium">
                      {applicantId}
                    </td>
                    <td className="px-4 py-3 text-sm">
                      <div className="flex items-center">
                        <span className="text-gray-900 font-medium bg-blue-50 px-2 py-1 rounded">
                          {showEnglishCode 
                            ? (result.EnglishExamCode || result.englishExamCode || `eng${applicantId?.slice(-4) || '0000'}`)
                            : maskCode(result.EnglishExamCode || result.englishExamCode || `eng${applicantId?.slice(-4) || '0000'}`)
                          }
                        </span>
                        <button 
                          onClick={toggleEnglishCode}
                          className="ml-2 text-gray-500 hover:text-gray-700 cursor-pointer transition-colors duration-200"
                          title={showEnglishCode ? '‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™' : '‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™'}
                        >
                          {showEnglishCode ? 'üôà' : 'üëÅÔ∏è'}
                        </button>
                      </div>
                    </td>
                    <td className="px-4 py-3 text-sm text-gray-900">
                      {firstName}
                    </td>
                    <td className="px-4 py-3 text-sm text-gray-900">
                      {lastName}
                    </td>
                    <td className="px-4 py-3 text-sm">
                      <div className="text-center">
                        <LinkButton href={result.EnglishExamLink || result.englishExamLink || "#"}>
                          ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≠‡∏ö
                        </LinkButton>
                        <div className="text-xs text-gray-500 mt-1">
                          <div>‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏ö‡∏≠‡∏¥‡∏™‡∏£‡∏∞</div>
                          <div>‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 9.00 - 21.00</div>
                        </div>
                      </div>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>

          {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */}
          <div>
            <div className="overflow-x-auto shadow-lg rounded-lg">
              <table className="w-full bg-white border border-gray-200">
                <thead className="bg-[#1a365d] text-white">
                  <tr>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£</th>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≠‡∏ö</th>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡∏ä‡∏∑‡πà‡∏≠</th>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                    <th className="px-4 py-3 text-left text-sm font-medium">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≠‡∏ö‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</th>
                  </tr>
                </thead>
                <tbody className="divide-y divide-gray-200">
                  <tr className="hover:bg-gray-50">
                    <td className="px-4 py-3 text-sm text-gray-900 font-medium">
                      {applicantId}
                    </td>
                    <td className="px-4 py-3 text-sm">
                      <div className="flex items-center">
                        <span className="text-gray-900 font-medium bg-green-50 px-2 py-1 rounded">
                          {showDigitalCode 
                            ? (result.DigitalExamCode || result.digitalExamCode || `dig${applicantId?.slice(-4) || '0000'}`)
                            : maskCode(result.DigitalExamCode || result.digitalExamCode || `dig${applicantId?.slice(-4) || '0000'}`)
                          }
                        </span>
                        <button 
                          onClick={toggleDigitalCode}
                          className="ml-2 text-gray-500 hover:text-gray-700 cursor-pointer transition-colors duration-200"
                          title={showDigitalCode ? '‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™' : '‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™'}
                        >
                          {showDigitalCode ? 'üôà' : 'üëÅÔ∏è'}
                        </button>
                      </div>
                    </td>
                    <td className="px-4 py-3 text-sm text-gray-900">
                      {firstName}
                    </td>
                    <td className="px-4 py-3 text-sm text-gray-900">
                      {lastName}
                    </td>
                    <td className="px-4 py-3 text-sm">
                      <div className="text-center">
                        <LinkButton href={result.DigitalExamLink || result.digitalExamLink || "#"}>
                          ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≠‡∏ö
                        </LinkButton>
                        <div className="text-xs text-gray-500 mt-1">
                          <div>‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏ö‡∏≠‡∏¥‡∏™‡∏£‡∏∞</div>
                          <div>‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 9.00 - 21.00</div>
                        </div>
                      </div>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      )}

      {/* ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ */}
      <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4">
        <div className="flex">
          <div className="flex-shrink-0">
            <svg className="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
            </svg>
          </div>
          <div className="ml-3">
            <p className="text-sm text-yellow-700">
              <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ResultTable;